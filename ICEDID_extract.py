## By twenska @ 19.06.2020
## Extracts and decrypts config from ICEDID Loader; needs to be unpacked!
## Coding this loader was part of the course Zero2Auto at https://courses.zero2auto.com

import pefile
import sys

## RC4 Key Scheduling Algorithm (KSA). Source is the book "Serious Cryptography" Chapter 5; slightly changed
## Takes the encryption key k and returns S as state for RC4
def KSA(k):
    j= 0
    S = list(range(256))
    n = len(k)
    for i in range(256):
        j= (j + S[i] + k[i % n]) % 256
        S[i], S[j] = S[j], S[i]
    return S

## RC4 Keystream generation. Source is the book "Serious Cryptography" Chapter 5; slightly changed
## Takes the length of the data to decrypt/encrypt as m and the state for RC4 as S and returns the keystream KS
def genKeystream(m,S):
    i=0
    j=0
    KS = list(range(m))
    for b in range(m):
        i= (i + 1) % 256
        j= (j+ S[i]) % 256
        S[i], S[j] = S[j], S[i]
        KS[b] = S[(S[i] + S[j]) % 256]
    return KS

## Takes data to encrypt/decrypt as D and the key as k; returns encrypted/decrypted data
def RC4(D,k):
    S = KSA(k)
    KS = genKeystream(len(D), S)
    i = 0
    dec_string = ""
    for c in D:
        result = c ^ KS[i]
        i+=1
        if(result == 0):
            result = 32
        dec_string += chr(result)
    return dec_string


if len(sys.argv) != 2:
    print("Usage: ICEDID_extract.py <Dumped_IceID_loader>")
    exit()

#Load file
pe = pefile.PE(sys.argv[1])

#Get the key and encrypted from static offsets in the .data section
#Finding these offset was done by static and dynamic analysis
#These offsets could change, so this code could be refined further
key = pe.sections[2].get_data()[:8]
enc_config = pe.sections[2].get_data()[8:592]

#Decrypt the config
config = RC4(enc_config,key)

#Parsing & pretty printing
config = config.split()
print("Getting config from {}".format(sys.argv[1]))
print("")
print("Found key: {}".format(key))
print("Lookout for decoded ASCII strings in key")
print("")
print("Config size is {} bytes".format(len(enc_config)))
print("")
print("---Start of Config---")
print("")
print("URL path: {}".format(config[2]))
i = 3
print("")
print("C2 Domains:")
while i < len(config):
    print(config[i])
    i+=1
print("")
print("---End of Config---")
